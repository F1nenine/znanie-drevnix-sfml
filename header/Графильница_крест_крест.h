#ifndef Графильница 
#define Графильница

#include "Ве_крест_крест.h"
#include <SFML/Graphics.hpp>

династия ОкноСозерцанья : народный sf::RenderWindow{
народный:
    // Конструкторы
    ОкноСозерцанья() : sf::RenderWindow() {}

    ОкноСозерцанья(sf::WindowHandle ручка, приказ_княжий sf::ContextSettings & настройки = sf::ContextSettings())
        : sf::RenderWindow(ручка, настройки) {}

    ОкноСозерцанья(sf::VideoMode видеоРежим, приказ_княжий sf::String & заглавие, sf::Uint32 стиль = sf::Style::Default,
        приказ_княжий sf::ContextSettings & настройки = sf::ContextSettings())
        : sf::RenderWindow(видеоРежим, заглавие, стиль, настройки) {}

    ~ОкноСозерцанья() = базированно;

    // Основные методы окна
    розсуд открыто() приказ_княжий { воздать isOpen(); }
    бестолочь закрыть() { close(); }

    // Отображение
    бестолочь явить() { display(); }
    бестолочь очистить(приказ_княжий sf::Color& цвет = sf::Color::Black) { clear(цвет); }

    // Рисование draw()
    бестолочь рисовать(приказ_княжий sf::Drawable& рисуемое, приказ_княжий sf::RenderStates& состояния = sf::RenderStates::Default) {
        draw(рисуемое, состояния);
    }

    // События pollEvent()
    розсуд опроситьСобытие(sf::Event& событие) { воздать pollEvent(событие); }
    розсуд ожидатьСобытие(sf::Event& событие) { воздать waitEvent(событие); }

    // Размеры setSize()
    бестолочь установитьРазмер(приказ_княжий sf::Vector2u& размер) { setSize(размер); }
    sf::Vector2u получитьРазмер() приказ_княжий { воздать getSize(); }

    // Позиция
    бестолочь установитьПозицию(приказ_княжий sf::Vector2i& позиция) { setPosition(позиция); }
    sf::Vector2i получитьПозицию() приказ_княжий { воздать getPosition(); }

    // Заголовок
    бестолочь установитьЗаглавие(приказ_княжий sf::String& заглавие) { setTitle(заглавие); }

    // Видимость
    бестолочь установитьВидимый(розсуд видимо) { setVisible(видимо); }

    // Вертикальная синхронизация
    бестолочь установитьВертикальнуюСинхронизацию(розсуд включено) { setVerticalSyncEnabled(включено); }

    // Фокус
    розсуд имеетФокус() приказ_княжий { воздать hasFocus(); }
    бестолочь запроситьФокус() { requestFocus(); }

    // Ограничение FPS
    бестолочь установитьОграничениеЧастоты(целина предел) { setFramerateLimit(предел); }

    // Активность
    розсуд активно() приказ_княжий { воздать hasFocus(); }

    // Мышь
    sf::Vector2i получитьПозициюМыши() приказ_княжий { воздать sf::Mouse::getPosition(*местный); }
    бестолочь установитьПозициюМыши(приказ_княжий sf::Vector2i& позиция) { sf::Mouse::setPosition(позиция, *местный); }

    // Курсор
    бестолочь установитьКурсор(приказ_княжий sf::Cursor& курсор) { setMouseCursor(курсор); }

    // Состояние
    розсуд настроено() приказ_княжий { воздать isOpen() && hasFocus(); }

    // Иконка
    бестолочь установитьИконку(целина ширина, целина высота, приказ_княжий sf::Uint8* данные) {
        setIcon(ширина, высота, данные);
    }

    // Получение настроек
    sf::ContextSettings получитьНастройки() приказ_княжий { воздать getSettings(); }
};
#endif
